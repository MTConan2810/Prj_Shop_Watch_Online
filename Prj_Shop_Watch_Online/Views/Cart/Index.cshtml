@model List<Prj_Shop_Watch_Online.Models.Cart>
@using Prj_Shop_Watch_Online.Models
@{
    ViewBag.Title = "Giỏ hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
    SWODBContext db = new SWODBContext();
    var checkkm = from km in db.Promotions where (km.Status == true && km.FromDate <= DateTime.Now && km.ToDate >= DateTime.Now) select km;
    var result = from obj in Model
                 from km in checkkm.ToList()
                 where obj.Products.Id == km.ProductId || obj.Products.BrandId == km.BrandId || km.ApplyForAll == true
                 select obj;
    var kmapplyforall = db.Promotions.Where(km => km.ApplyForAll == true).ToList();
    Boolean checkQuyen(int code)
    {
        Boolean check = false;
        foreach (var abc in result.ToList())
        {
            if (abc.Products.Id == code)
            {
                check = true;
            }
        }
        return check;
    }

}

<div class="row">
    <ol class="breadcrumb breadcrumb-instro">
        <li class="breadcrumb-item"><a href="/"><i class="fa fa-forward" aria-hidden="true"></i>Trang chủ</a></li>
        <li class="breadcrumb-item active">Giỏ hàng</li>
    </ol>
</div>
<div class="row" id="cart-screen">
    @if (Model.Count > 0)
    {
        int stt = 1;
        decimal total = 0;
        decimal? giakm = 0;
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover" id="table-cart" width="100%" cellspacing="0">
                <thead class="table-success text-center">
                    <tr>
                        <th width="3%">STT</th>
                        <th width="35%">Ảnh</th>
                        <th width="15%">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Số lượng</th>
                        <th width="22%">Khuyến mãi</th>
                        <th width="20%">Thành tiền</th>
                        <th width="5%"></th>
                    </tr>
                </thead>
                <tbody class="text-left">
                    @foreach (var item in Model)
                    {
                        var anh = db.ProductImage.Where(s => s.ProductId == item.Products.Id).Select(s => s).ToList();
                        <tr>
                            <td>@(stt++)</td>
                            <td>
                                @foreach (var obj in anh)
                                {
                                    if (obj.IsDefault == true)
                                    {
                                        string ImagePath = "~/wwwroot/ImageProducts/" + obj.ImagePath;
                                        <img class="img-thumbnail" src="@Url.Content(ImagePath)" alt="@obj.Caption" width="100" height="100" title="@obj.Caption" />
                                    }

                                }
                                <p></p>
                                <h5 class="card-title" style="font-weight:bold;">
                                    Đồng hồ @Html.DisplayFor(model => item.Products.TenSp) @Html.DisplayFor(model => item.Products.MaSp)
                                </h5>
                                <p class="card-text" style="font-variant-caps:normal; font-style:italic; color:cadetblue;">@Html.DisplayFor(model => item.Products.Brands.TenTH)</p>
                                <p>
                                    Giá gốc: @String.Format("{0:C}", item.Products.Gia).Replace(",00", "")
                                </p>
                            </td>

                            <td>
                                @if (item.quantity <= 1)
                                {
                                    <button class="btn btnUpdateDesc" name="productId"
                                            data-ProductId="@item.Products.Id" disabled>
                                        <i class="fas fa-minus"></i>
                                    </button>
                                }
                                else
                                {
                                    <button class="btn btnUpdateDesc" name="productId"
                                            data-ProductId="@item.Products.Id">
                                        <i class="fas fa-minus"></i>
                                    </button>
                                }
                                <input style="width:35px" type="number" id="@($"quantity-{item.Products.Id}")" value="@item.quantity" min="1" max="@item.Products.SoLuong" class="test-quantity" data-ProductId="@item.Products.Id" />
                                @if (item.quantity >= item.Products.SoLuong)
                                {
                                    <button class="btn btnUpdate" name="productId"
                                            data-ProductId="@item.Products.Id" id="@($"asquantity-{item.Products.Id}")" disabled>
                                        <i class="fas fa-plus"></i>
                                    </button>
                                }
                                else
                                {
                                    <button class="btn btnUpdate" name="productId"
                                            data-ProductId="@item.Products.Id" id="@($"asquantity-{item.Products.Id}")">
                                        <i class="fas fa-plus"></i>
                                    </button>
                                }

                            </td>
                            @if (checkQuyen(item.Products.Id) == false)
                            {
                                giakm = item.Products.Gia * item.quantity;
                                <td></td>
                                <td>@String.Format("{0:C}", giakm).Replace(",00", "")</td>
                                total += (decimal)giakm;
                            }
                            @if (kmapplyforall.Count > 0)
                            {
                                foreach (var km in checkkm)
                                {

                                    if (km.ApplyForAll == true)
                                    {
                                        if (km.DiscountPercent != null)
                                        {
                                            giakm = (item.Products.Gia - (decimal)(item.Products.Gia * km.DiscountPercent / 100)) * item.quantity;
                                            <td><p style="color:red;font-style:italic;text-shadow:4px 4px 8px pink;"><i class="fas fa-gift" style="color:red"></i> @km.Name</p></td>
                                            <td>@String.Format("{0:C}", giakm).Replace(",00", "")</td>
                                            total += (decimal)giakm;

                                        }
                                        else if (km.DiscountAmount != null)
                                        {
                                            giakm = (item.Products.Gia - (decimal)km.DiscountAmount) * item.quantity;
                                            <td><p style="color:red;font-style:italic;text-shadow:4px 4px 8px pink;"><i class="fas fa-gift" style="color:red"></i> @km.Name</p></td>
                                            <td>@String.Format("{0:C}", giakm).Replace(",00", "")</td>
                                            total += (decimal)giakm;
                                        }

                                    }
                                }
                            }
                            else
                            {
                                foreach (var km in checkkm)
                                {

                                    if (km.ProductId == item.Products.Id || km.BrandId == item.Products.BrandId)
                                    {
                                        if (km.DiscountPercent != null)
                                        {
                                            giakm = (item.Products.Gia - (decimal)(item.Products.Gia * km.DiscountPercent / 100)) * item.quantity;
                                            <td><p style="color:red;font-style:italic;text-shadow:4px 4px 8px pink;"><i class="fas fa-gift" style="color:red"></i> @km.Name</p> </td>
                                            <td>@String.Format("{0:C}", giakm).Replace(",00", "")</td>
                                            total += (decimal)giakm;

                                        }
                                        else if (km.DiscountAmount != null)
                                        {
                                            giakm = (item.Products.Gia - (decimal)km.DiscountAmount) * item.quantity;
                                            <td><p style="color:red;font-style:italic;text-shadow:4px 4px 8px pink;"><i class="fas fa-gift" style="color:red"></i> @km.Name</p></td>
                                            <td>@String.Format("{0:C}", giakm).Replace(",00", "")</td>
                                            total += (decimal)giakm;

                                        }
                                    }

                                }
                            }

                            <td class="text-left">
                                <a href="@Url.Action("RemoveCart","Cart",new { productId = item.Products.Id })"
                                   class="btn btn-danger" id="btnXoa"><i class="far fa-trash-alt fa-1x"></i></a>
                            </td>
                        </tr>
                    }                    
                </tbody>
                <tfoot>
                    <tr>
                        <th colspan="4" class="text-right">Tổng tiền:</th>
                        <td class="text-left">@String.Format("{0:C}", total).Replace(",00", "")</td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
        <div class="row clearfix">
            <div class="col-md-5">
                <ul class="nav nav-tabs" id="myTab" role="tablist">
                    <li class="nav-item" role="presentation" style="width:35%">
                        <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile" type="button" role="tab" aria-controls="profile" aria-selected="false" style="width:100%;background-color: #337ab7;border-color: #2e6da4; color:white; font-weight:bold;">Đặt hàng</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="messages-tab" data-bs-toggle="tab" data-bs-target="#messages" type="button" role="tab" aria-controls="messages" aria-selected="false" style="width:100%">X</button>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                        @using (Html.BeginForm("Check_Out", "Cart", FormMethod.Post))
                        {
                            <h3>Thông tin người đặt hàng</h3>
                            <div class="form-group">
                                <label class="control-label col-md-3" for="shipname">Họ và tên</label>
                                <div class="col-md-9" style="margin-bottom:20px">
                                    <input class="form-control the-nhap text-box single-line" id="shipname" name="shipname" type="text" value="" required>                                  
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3" for="shipphonenumber">Điện thoại</label>
                                <div class="col-md-9" style="margin-bottom:20px">
                                    <input class="form-control the-nhap text-box single-line" id="shipphonenumber" name="shipphonenumber" type="tel" value="" required>               
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3" for="shipemail">Email</label>
                                <div class="col-md-9" style="margin-bottom:20px">
                                    <input class="form-control the-nhap text-box single-line" id="shipemail" name="shipemail" type="email" value="" required>         
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3" for="shipaddress">Địa chỉ</label>
                                <div class="col-md-9" style="margin-bottom:20px">
                                    <input class="form-control the-nhap text-box single-line" id="shipaddress" name="shipaddress" type="text" value="" required>             
                                </div>
                            </div>
                            <div>
                                <label class="control-label col-md-3">Phương thức thanh toán</label>
                                <div class="col-md-9" style="margin-bottom:20px">
                                    <select class="form-control the-nhap" name="PaymentId" id="PaymentId">
                                        <option value="">Phương thức thanh toán &nabla;</option>
                                        @foreach(var pay in db.Payment)
                                        {
                                            <option value="@pay.Id">@pay.PayName</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary" id="GuiDH">Gửi đơn hàng</button>
                            @*<script>
                                var button = document.getElementById("GuiDH");
                                button.onclick = function () {
                                    alert("Đã gửi đơn hàng");
                                }
                            </script>*@
                        }
                        <a href="/" class="btn btn-danger offset-3" style="margin-top:15px;"><i class="fas fa-play fa-rotate-180"></i> Tiếp tục mua hàng</a>
                    </div>
                    <div class="tab-pane" id="messages" role="tabpanel" aria-labelledby="messages-tab">                      
                    </div>
                </div>
            </div>
        </div>
        @section Scripts {
            <script>
                $(document).ready(function () {
                    $(".btnUpdate").click(function (event) {
                        event.preventDefault();
                        var productId = $(this).attr("data-productId");
                        var quantity = $("#quantity-" + productId).val();
                        var changeq = parseInt(quantity, 10);

                        document.getElementById("quantity-" + productId).value = changeq+1;
                          $.ajax({
                                type: "POST",
                                url: "/Cart/UpdateCart",
                                data: {
                                    productId: productId,
                                    quantity: changeq + 1
                                },
                              success: function (result) {
                                  window.location.reload();
                                }
                            });
                    });
                    $(".btnUpdateDesc").click(function (event) {
                        event.preventDefault();
                        var productId = $(this).attr("data-productId");
                        var quantity = $("#quantity-" + productId).val();
                        var changeq = parseInt(quantity, 10);

                        document.getElementById("quantity-" + productId).value = changeq - 1;
                        $.ajax({
                            type: "POST",
                            url: "/Cart/UpdateCart",
                            data: {
                                productId: productId,
                                quantity: changeq - 1
                            },
                            success: function (result) {
                                window.location.reload();
                            }
                        });
                    });
                    $(".test-quantity").on('change', function (event) {
                        event.preventDefault();
                        var productId = $(this).attr("data-productId");
                        //var quantity = $("#quantity-" + productId).val();
                        var checkmax = $("#quantity-" + productId).attr("max");
                        var checkmin = $("#quantity-" + productId).attr("min");
                        var max = parseInt(checkmax, 10);
                        var min = parseInt(checkmin, 10);

                        var value = this.valueAsNumber;
                        if (value < min) {
                            value = min;
                        }
                        else if (value > max) {
                            value = max;
                        }
                        $(this).value = value;
                        $.ajax({
                            type: "POST",
                            url: "/Cart/UpdateCart",
                            data: {
                                productId: productId,
                                quantity: value
                            },
                            success: function (result) {
                                window.location.reload();
                            }
                        });
                    });
                 });
            </script>
        }
    }
    else
    {
        <div class="alert alert-danger" role="alert">Giỏ hàng trống </div>
    }
</div>
